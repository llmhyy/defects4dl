//jqGrid的配置信息

if ($.jgrid) {
    $.jgrid.defaults.width = 1000;
    $.jgrid.defaults.responsive = true;
    $.jgrid.defaults.styleUI = 'Bootstrap';


    //jqgrid全局配置
    $.extend($.jgrid.defaults, {
        ajaxGridOptions: {
            headers: {
                "token": token
            }
        }
    });
}


//工具集合Tools
window.T = {};

// 获取请求参数
// 使用示例
// location.href = http://localhost/index.html?id=123
// T.p('id') --> 123;
var url = function (name) {
    var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");
    var r = window.location.search.substr(1).match(reg);
    if (r != null) return unescape(r[2]);
    return null;
};
T.p = url;

//请求前缀
var baseURL = "/";

//登录token
var token = localStorage.getItem("token");
if (token == 'null') {
    parent.location.href = baseURL + 'login.html';
}

//jquery全局配置
$.ajaxSetup({
    dataType: "json",
    cache: false,
    headers: {
        "token": token
    },
    // xhrFields: {
    //     withCredentials: true
    // },
    complete: function (xhr) {
        //token过期，则跳转到登录页面
        if (xhr.responseJSON.code == 401) {
            parent.location.href = baseURL + 'login.html';
        }
    }
});

//权限判断
function hasPermission(permission) {
    if (window.parent.permissions.indexOf(permission) > -1) {
        return true;
    } else {
        return false;
    }
}

//重写alert
window.alert = function (msg, callback) {
    parent.layer.alert(msg, function (index) {
        parent.layer.close(index);
        if (typeof (callback) === "function") {
            callback("ok");
        }
    });
}

//重写confirm式样框
window.confirm = function (msg, callback) {
    parent.layer.confirm(msg, {btn: ['确定', '取消']},
        function () {//确定事件
            if (typeof (callback) === "function") {
                callback("ok");
            }
        });
}

//重写confirm式样框
window.errorMsg = function (msg, callback) {
    parent.layer.msg(msg, {icon: 2, time: 3500, end: callback});
}

window.successMsg = function (msg, callback) {
    parent.layer.msg(msg, {icon: 1, time: 2000, end: callback});
}

window.wornMsg = function (msg, callback) {
    parent.layer.msg(msg, {icon: 4, time: 2000, end: callback});
}

//选择一条记录
function getSelectedRow() {
    var grid = $("#jqGrid");
    var rowKey = grid.getGridParam("selrow");
    if (!rowKey) {
        wornMsg("请选择一条记录");
        return;
    }

    var selectedIDs = grid.getGridParam("selarrrow");
    if (selectedIDs.length > 1) {
        wornMsg("只能选择一条记录");
        return;
    }

    return selectedIDs[0];
}

//选择多条记录
function getSelectedRows() {
    var grid = $("#jqGrid");
    var rowKey = grid.getGridParam("selrow");
    if (!rowKey) {
        wornMsg("请选择一条记录");
        return;
    }

    return grid.getGridParam("selarrrow");
}

// 根据id获取整行的数据
function getRowData(rowId) {
    var rowObject = $("#jqGrid").jqGrid('getRowData', rowId);
    return rowObject ? rowObject : undefined;
}

/**
 * json中根据key和value获取下标
 * @param array json队列
 * @param feild key name
 * @param value 值
 * @returns {number}
 */
function findIndex(array, feild, value) {
    var index = -1;
    array.forEach(function (ele, i) {
        if (ele[feild] == value) {
            index = i;
            return;
        }
    });
    return index;
}

/**
 * 下拉列表 k-v list中，根据key的值获取value的值，常用于 jgrid 显示类型数据
 * @param array json队列
 * @param feild 默认是key
 * @param key的值是多少
 * @returns {string}
 */
function findValue(array, feild, value) {
    var index = -1;
    array.forEach(function (ele, i) {
        if (ele[feild] == value) {
            index = i;
            return;
        }
    });
    return array[index] ? array[index].value : '';
}

/**
 * 获取整个obj
 * @param array json队列
 * @param feild 默认是key
 * @param key的值是多少
 * @returns {obj}
 */
function findObj(array, feild, value) {
    var index = -1;
    array.forEach(function (ele, i) {
        if (ele[feild] == value) {
            index = i;
            return;
        }
    });
    return array[index] ? array[index] : undefined;
}

/**
 * 获取 url 参数
 * @param variable
 * @returns {string|boolean}
 */
function getQueryVariable(variable) {
    var query = window.location.search.substring(1);
    var vars = query.split("&");
    for (var i = 0; i < vars.length; i++) {
        var pair = vars[i].split("=");
        if (pair[0] == variable) {
            return pair[1];
        }
    }
    return (false);
}


// 静态字典，dictionary表变化时需要手动更新。格式为[[id,name,typeId,order],...]
var staticDictionary = [["2", "服务产品", "2", "3"], ["3", "电子卡券", "2", "2"], ["4", "纯商品", "4", "1"], ["5", "纯服务", "4", "2"], ["6", "商品转服务", "4", "3"], ["7", "门店", "5", "1"], ["8", "网店", "5", "2"], ["9", "未分类", "5", "3"], ["10", "单个销售", "3", "1"], ["11", "组合销售", "3", "2"], ["12", "机构", "6", "1"], ["13", "性别", "6", "2"], ["14", "线上服务", "7", "1"], ["15", "上门服务", "7", "2"], ["16", "到店服务", "7", "3"], ["17", "综合型服务", "7", "4"], ["18", "预约", "9", "1"], ["19", "支付", "9", "2"], ["20", "购买", "9", "3"], ["21", "体检", "9", "4"], ["22", "体检报告", "9", "5"], ["28", "商品名称已存在", "11", "1"], ["29", "商品名称不符合规范", "11", "2"], ["30", "商品图片不符合规范", "11", "3"], ["31", "图文", "15", "1"], ["32", "文字", "15", "2"], ["33", "视频", "15", "3"], ["34", "音频", "15", "4"], ["35", "审核中", "16", "1"], ["36", "审核通过", "16", "2"], ["37", "审核不通过", "16", "3"], ["38", "已删除", "16", "4"], ["39", "草稿", "16", "5"], ["40", "审核中", "10", "1"], ["41", "已通过", "10", "2"], ["42", "已驳回", "10", "3"], ["43", "健康", "8", "1"], ["44", "商品", "8", "2"], ["45", "服务", "8", "3"], ["46", "商品价格", "17", "1"], ["47", "商品描述", "17", "2"], ["48", "优惠促销", "17", "3"], ["49", "人群设定", "17", "4"], ["50", "图片素材", "17", "5"], ["51", "销售类型", "17", "6"], ["52", "服务流程", "17", "7"], ["53", "dsad", "14", "1"], ["54", "审核中", "13", "1"], ["55", "服务首页banner", "18", "1"], ["56", "服务首页广告", "18", "2"], ["57", "商城banner", "18", "3"], ["58", "数据中心banner", "18", "4"], ["59", "商家信用", "19", "1"], ["60", "销售业绩", "19", "2"], ["61", "客户评价", "19", "3"], ["62", "不良记录", "19", "4"], ["63", "居民身份证", "20", "1"], ["64", "军官证", "20", "2"], ["65", "护照", "20", "3"], ["66", "全部", "21", "1"], ["67", "城镇职工社会保险", "22", "1"], ["68", "城镇灵活就业社会保险", "22", "2"], ["69", "城镇居民社会保险", "22", "3"], ["70", "农村村民社会保险", "22", "4"], ["71", "性别", "23", "1"], ["72", "等级", "23", "2"], ["73", "身份", "23", "3"], ["74", "登录", "24", "1"], ["75", "购买", "24", "2"], ["76", "添加", "24", "3"], ["77", "购买", "25", "1"], ["78", "消费", "25", "2"], ["79", "评论", "25", "3"], ["80", "登录", "25", "4"], ["81", "评价", "25", "5"], ["82", "普通会员", "21", "2"], ["83", "vip会员", "21", "3"], ["84", "服务者", "21", "4"], ["85", "商城banner", "26", "1"], ["86", "商城优选服务1", "26", "2"], ["87", "商城优选服务2", "26", "3"], ["88", "商城优选服务3", "26", "4"], ["89", "商城优选服务4", "26", "5"], ["90", "我的服务banner1", "27", "1"], ["91", "我的服务banner2", "27", "2"], ["92", "我的服务banner3", "27", "3"], ["93", "我的服务banner4", "27", "4"], ["94", "学生", "8", "4"], ["101", "退货", "30", "1"], ["102", "换货", "30", "2"], ["103", "维修", "30", "3"], ["104", "补发商品", "30", "4"], ["105", "发票问题", "31", "1"], ["106", "质量问题", "31", "2"], ["107", "商品与页面描述不符", "31", "3"], ["108", "服务与描述不符", "31", "4"], ["109", "七天无理由", "31", "5"], ["110", "卖家发错货", "31", "6"], ["111", "包装/商品破损/污渍", "31", "7"], ["112", "其他", "31", "8"], ["114", "主任医生", "32", "1"], ["115", "副主任医生", "32", "2"], ["116", "主治医生", "32", "3"], ["117", "内科", "33", "1"], ["118", "外科", "33", "2"], ["119", "精神科", "33", "3"], ["120", "VIP1", "34", "1"], ["121", "VIP2", "34", "2"], ["122", "VIP3", "34", "3"], ["123", "VIP4", "34", "4"], ["126", "体检服务_tijian", "35", "0"], ["127", "家政服务_jiazheng", "35", "1"], ["128", "签约提醒", "36", "1"], ["129", "温馨提醒", "36", "2"], ["130", "测试部", "2", "1"], ["131", "测试026#￥%……&amp;*^", "57", "1"], ["141", "支付宝", "62", "1"], ["142", "微信", "62", "2"], ["143", "银联", "62", "3"], ["145", "最新资讯", "63", "1"], ["146", "政策法规", "63", "2"], ["147", "产业观察", "63", "3"], ["148", "养老百科", "63", "4"], ["149", "生活娱乐", "63", "5"], ["150", "养老保险", "63", "6"], ["151", "热门咨询", "63", "7"], ["152", "养老研究", "63", "8"], ["153", "互动养老", "63", "9"], ["157", "敬老院", "65", "1"], ["158", "老年公寓", "65", "2"], ["159", "护理院", "65", "3"], ["160", "疗养院", "65", "4"], ["161", "养老照料中心", "65", "5"], ["162", "养老社区/CCRC", "65", "6"], ["163", "福利院", "65", "7"], ["164", "养老院", "65", "8"], ["165", "其它", "65", "9"], ["166", "50以内", "66", "1"], ["167", "50-100", "66", "2"], ["168", "100-200", "66", "3"], ["169", "200-300", "66", "4"], ["170", "300-500", "66", "5"], ["171", "500以上", "66", "6"], ["172", "国营机构", "67", "1"], ["173", "民营机构", "67", "2"], ["174", "社会团体", "67", "3"], ["175", "公办民营", "67", "4"], ["176", "公助民办", "67", "5"], ["177", "其它", "67", "6"], ["178", "500以下", "68", "1"], ["179", "500-1000", "68", "2"], ["180", "1000-2000", "68", "3"], ["181", "2000-3000", "68", "4"], ["182", "3000-5000", "68", "5"], ["183", "5000以上", "68", "6"], ["184", "自理", "69", "1"], ["185", "半自理/介助", "69", "2"], ["186", "不能自理/介护", "69", "3"], ["187", "特护", "69", "4"], ["188", "支持医保", "70", "1"], ["189", "异地收住", "70", "2"], ["190", "可候鸟旅居", "70", "3"], ["191", "可试住体验", "70", "4"], ["193", "不需要服务了", "71", "1"], ["194", "服务不好", "71", "2"], ["195", "未按规定时间服务", "71", "3"], ["196", "服务质量不好", "71", "4"], ["197", "服务与内容不符", "71", "5"], ["198", "其他", "71", "6"], ["199", "买家提交退款申请", "72", "1"], ["200", "买家修改退款申请", "72", "2"], ["201", "服务商同意退款申请", "72", "3"], ["202", "服务商拒绝退款申请", "72", "4"], ["203", "服务商退款待处理", "73", "1"], ["204", "退款成功", "73", "4"], ["205", "退款失败", "73", "6"], ["206", "机构养老", "74", "1"], ["207", "居家养老", "74", "2"], ["208", "社区养老", "74", "3"], ["209", "旅居养老", "74", "4"], ["210", "医养结合", "74", "5"], ["215", "仅退款", "76", "1"], ["222", "能自理", "78", "1"], ["223", "半自理", "78", "2"], ["224", "不能自理", "78", "3"], ["225", "3500-6000元/月", "79", "1"], ["226", "6000-1000元/月", "79", "2"], ["227", "10000以上元/月", "79", "3"], ["228", "一周内", "80", "1"], ["229", "半月内", "80", "2"], ["230", "一月内", "80", "3"], ["235", "商品", "81", "1"], ["236", "商家", "81", "2"], ["237", "服务", "81", "3"], ["238", "机构", "81", "4"], ["239", "预约已提交", "82", "1"], ["240", "预约进行中", "82", "2"], ["241", "预约已完成", "82", "3"], ["243", "预约已取消", "82", "4"], ["244", "PC", "83", "1"], ["245", "H5", "83", "2"], ["246", "Android", "83", "3"], ["247", "iPhone", "83", "4"], ["248", "服务首页", "84", "1"], ["249", "商城首页", "84", "2"], ["250", "个人账户", "85", "1"], ["251", "商家账户", "85", "2"], ["252", "机构账户", "85", "3"], ["253", "买家创建退款申请", "86", "1"], ["254", "买家修改退款申请", "86", "2"], ["255", "买家创建退货退款申请", "86", "3"], ["256", "买家修改退货退款申请", "86", "4"], ["257", "商家同意退款申请", "86", "5"], ["258", "商家拒绝退款申请", "86", "6"], ["259", "商家同意退货退款申请", "86", "7"], ["260", "商家拒绝退货退款申请", "86", "8"], ["261", "待付款", "87", "1"], ["262", "待发货", "87", "2"], ["263", "待收货", "87", "3"], ["264", "待评价", "87", "4"], ["265", "已完成", "87", "5"], ["266", "已取消", "87", "6"], ["267", "退货中", "87", "7"], ["268", "回收站", "87", "8"], ["269", "可申请售后（仅退款）", "88", "1"], ["270", "已申请仅退款，等待商家处理", "88", "2"], ["271", "卖家同意退款，退款成功", "88", "3"], ["272", "申请仅退款失败", "88", "4"], ["273", "可申请售后（退款退货）", "88", "5"], ["274", "已申请退款退货，等待商家处理", "88", "6"], ["275", "卖家同意退款退货，等待买家退货", "88", "7"], ["276", "申请退款退货失败", "88", "8"], ["277", "退款退货成功", "88", "9"], ["278", "服务信息填写错误，重新下单", "89", "1"], ["279", "暂时不需要服务了", "89", "2"], ["280", "服务商告知不能提供服务", "89", "3"], ["281", "服务内容与描述不符", "89", "4"], ["283", "其他原因", "89", "5"], ["285", "在线支付", "90", "1"], ["286", "现场付款", "90", "2"], ["287", "货到付款", "90", "3"], ["288", "待支付", "91", "1"], ["289", "支付成功", "91", "2"], ["290", "支付失败", "91", "3"], ["291", "取消", "91", "4"], ["292", "等待买家付款", "92", "1"], ["293", "买家已付款", "92", "2"], ["294", "交易进行中", "92", "3"], ["295", "交易成功", "92", "4"], ["296", "交易取消", "92", "5"], ["297", "交易关闭", "92", "6"], ["299", "等待服务", "93", "1"], ["300", "服务进行中", "93", "2"], ["301", "服务完成", "93", "3"], ["302", "等待开启", "93", "4"], ["303", "服务开启中", "93", "5"], ["304", "服务开启完成", "93", "6"], ["307", "待开票", "94", "2"], ["308", "已开票", "94", "3"], ["309", "已关闭", "73", "5"], ["310", "警官证", "20", "4"], ["311", "士兵证", "20", "5"], ["312", "（港澳）内地通行证（回乡证）", "20", "6"], ["313", "（台）大陆通行证（台胞证）", "20", "7"], ["314", "其他证件", "20", "8"], ["315", "未婚", "96", "1"], ["316", "已婚", "96", "2"], ["317", "离异", "96", "3"], ["318", "丧偶", "96", "4"], ["323", "注册赠券", "100", "1"], ["324", "全场赠券", "100", "2"], ["325", "会员赠券", "100", "3"], ["326", "全部商品/服务", "101", "1"], ["327", "全部商品", "101", "2"], ["328", "指定商品类别", "101", "3"], ["329", "指定商品", "101", "4"], ["330", "全部服务", "101", "5"], ["331", "指定服务类别", "101", "6"], ["332", "指定服务", "101", "7"], ["333", "指定组合商品(服务)", "101", "8"], ["334", "买家", "102", "1"], ["335", "卖家", "102", "2"], ["336", "管理员", "102", "3"], ["337", "图片", "103", "1"], ["338", "文字", "103", "2"], ["339", "代码", "103", "3"], ["340", "全部", "104", "1"], ["341", "会员", "104", "2"], ["342", "银牌会员", "104", "3"], ["343", "金牌会员", "104", "4"], ["344", "已上架", "105", "1"], ["345", "未上架", "105", "2"], ["346", "优惠券", "106", "1"], ["347", "优惠活动", "106", "2"], ["348", "下属机构账户", "85", "4"], ["349", "PC", "107", "1"], ["350", "移动设备", "107", "2"], ["351", "平板", "107", "3"], ["352", "其它", "107", "4"], ["353", "享受现金减免", "108", "0"], ["354", "享受价格折扣", "108", "1"], ["355", "全场通用", "109", "0"], ["356", "自主使用", "109", "1"], ["357", "买家撤销退款申请", "72", "5"], ["358", "待退款", "73", "3"], ["359", "已售罄", "105", "3"], ["360", "连锁品牌", "70", "5"], ["370", "50以内", "111", "1"], ["371", "50-100", "111", "2"], ["372", "100-200", "111", "3"], ["373", "200-300", "111", "4"], ["374", "300-500", "111", "5"], ["375", "500以上", "111", "6"], ["376", "发货", "48", "1"], ["377", "揽收", "48", "2"], ["378", "运输中", "48", "3"], ["379", "正在派件", "48", "4"], ["380", "已签收", "48", "5"], ["381", "全省范围", "112", "1"], ["382", "全市范围", "112", "2"], ["383", "全区范围", "112", "3"], ["384", "全街道范围", "112", "4"], ["385", "全国范围", "112", "5"], ["388", "退货地址", "113", "1"], ["389", "发货地址", "113", "2"], ["390", "收票地址", "113", "3"], ["391", "收货地址", "113", "4"], ["392", "服务地址", "113", "5"], ["393", "所有人", "114", "1"], ["394", "会员", "114", "2"], ["395", "金牌会员", "114", "3"], ["396", "失信", "115", "1"], ["397", "未失信", "115", "2"], ["398", "退款中的订单", "92", "7"], ["399", "未服务", "116", "1"], ["400", "已服务", "116", "2"], ["401", "PC", "45", "1"], ["402", "移动端", "45", "2"], ["403", "代币", "62", "4"], ["404", "代币+支付宝", "62", "5"], ["405", "代币+微信", "62", "6"], ["406", "代币+银联", "62", "7"], ["407", "未删除", "117", "1"], ["408", "删除到回收站", "117", "2"], ["409", "回收站已删除", "117", "3"], ["410", "其他", "118", "1"], ["411", "服务已开始", "118", "2"], ["413", "服务订单申诉", "119", "1"], ["414", "预约单订单申诉", "119", "2"], ["415", "登入", "120", "1"], ["416", "登出", "120", "2"], ["417", "超时关闭", "121", "1"], ["418", "平台关闭", "122", "1"], ["419", "买家关闭", "122", "2"], ["420", "已关闭", "93", "7"], ["421", "服务商拒绝服务", "72", "6"], ["422", "优秀", "123", "1"], ["", "2020-01-13 19:19:38", "", "2020-01-13 19:19:38"], ["423", "一般", "123", "2"], ["424", "全职", "124", "1"], ["425", "兼职", "124", "2"], ["426", "良好", "123", "3"], ["427", "服务人员账户", "85", "5"], ["428", "空闲", "125", "1"], ["429", "服务中", "125", "2"], ["430", "比如", "126", "1"], ["431", "其他", "126", "10"], ["432", "纯线上服务", "127", "1"], ["433", "线上线下结合但无需对接接口的服务", "127", "2"], ["434", "线上线下结合且需要对接接口的服务", "127", "3"], ["435", "买家退款待处理", "73", "2"], ["436", "平台后台", "58", "0"], ["437", "商家服务端", "58", "1"], ["439", "商家端管理员", "85", "0"], ["440", "退款关闭", "121", "2"], ["441", "已结算", "128", "0"], ["442", "未结算", "128", "0"], ["443", "提现", "129", "10"], ["444", "充值", "129", "10"], ["445", "转账", "129", "10"], ["446", "处理中", "130", "10"], ["447", "已处理", "130", "10"], ["448", "商品", "131", "10"], ["449", "商家", "131", "10"], ["450", "服务", "132", "10"], ["451", "机构", "132", "10"], ["452", "已转换", "133", "10"], ["453", "未转换", "133", "10"], ["454", "csv", "134", "10"], ["455", "未开启服务超时退款", "72", "7"], ["456", "系统自动退款", "72", "8"], ["457", "系统自动关闭退款", "72", "9"], ["458", "未对账", "136", "10"], ["459", "已对账", "136", "10"], ["460", "正常", "137", "10"], ["461", "异常", "137", "10"], ["462", "未处理", "138", "10"], ["463", "已处理", "138", "10"], ["464", "商户", "139", "10"], ["465", "服务商", "139", "10"], ["466", "快递运输", "140", "0"], ["467", "物流", "140", "1"], ["468", "EMS", "140", "2"], ["476", "下属商家账户", "85", "6"], ["477", "未派单", "143", "1"], ["478", "已派单", "143", "2"], ["479", "确认服务时间", "144", "1"], ["480", "开启服务时间", "144", "2"], ["481", "管理员", "85", "0"], ["482", "商城用户", "85", "7"], ["483", "商品展示图片", "145", "1"], ["484", "商品详情图", "145", "2"], ["485", "商品图集", "145", "3"], ["486", "线上线下相结合需要对接接口服务（协作类）", "127", "4"], ["487", "商城首页广告", "18", "5"], ["488", "0-200元", "146", "1"], ["489", "200-500元", "146", "2"], ["490", "500-1000元", "146", "3"], ["491", "1000-5000元", "146", "4"], ["492", "5000元以上", "146", "5"], ["493", "机构养老", "147", "1"], ["494", "居家养老", "147", "2"], ["495", "旅居养老", "147", "3"], ["496", "社区养老", "147", "4"], ["497", "医养结合", "147", "5"], ["498", "正常", "148", "1"], ["499", "关闭", "148", "2"], ["500", "未介入", "149", "1"], ["501", "介入中", "149", "2"], ["502", "已结束", "149", "3"], ["503", "等待平台处理", "73", "7"], ["504", "暂时不想预约了", "150", "1"], ["505", "预约信息填写错误，重新预约", "150", "2"], ["506", "预约错养老服务商了", "150", "3"], ["507", "与服务商沟通后，发现无法满足养老需求", "150", "4"], ["508", "其他原因", "150", "5"], ["509", "政府管理员", "85", "9"], ["510", "政府端菜单", "58", "2"], ["511", "再婚", "96", "5"], ["512", "阿昌族", "151", "1"], ["513", "白族", "151", "2"], ["514", "保安族", "151", "3"], ["515", "布朗族", "151", "4"], ["516", "布依族", "151", "5"], ["517", "藏族", "151", "6"], ["518", "朝鲜族", "151", "7"], ["519", "达斡尔族", "151", "8"], ["520", "傣族", "151", "9"], ["521", "德昂族", "151", "10"], ["522", "东乡族", "151", "11"], ["523", "侗族", "151", "12"], ["524", "独龙族", "151", "13"], ["525", "俄罗斯族", "151", "14"], ["526", "鄂伦春族", "151", "15"], ["527", "鄂温克族", "151", "16"], ["528", "高山族", "151", "17"], ["529", "哈尼族", "151", "18"], ["530", "哈萨克族", "151", "19"], ["531", "汉族", "151", "20"], ["532", "赫哲族", "151", "21"], ["533", "回族", "151", "22"], ["534", "基诺族", "151", "23"], ["535", "京族", "151", "24"], ["536", "景颇族", "151", "25"], ["537", "柯尔克孜族", "151", "26"], ["538", "拉祜族", "151", "27"], ["539", "黎族", "151", "28"], ["540", "满族", "151", "29"], ["541", "毛南族", "151", "30"], ["542", "门巴族", "151", "31"], ["543", "蒙古族", "151", "32"], ["544", "苗族", "151", "33"], ["545", "纳西族", "151", "34"], ["546", "怒族", "151", "35"], ["547", "普米族", "151", "36"], ["548", "羌族", "151", "37"], ["549", "撒拉族", "151", "38"], ["550", "水族", "151", "39"], ["551", "僳僳族", "151", "40"], ["552", "塔吉克族", "151", "41"], ["553", "塔塔尔族", "151", "42"], ["554", "土家族", "151", "43"], ["555", "土族", "151", "44"], ["556", "维吾尔族", "151", "45"], ["557", "乌孜别克族", "151", "46"], ["558", "锡伯族", "151", "47"], ["559", "瑶族", "151", "48"], ["560", "彝族", "151", "49"], ["561", "裕固族", "151", "50"], ["562", "壮族", "151", "51"], ["563", "仡佬族", "151", "52"], ["564", "仫佬族", "151", "53"], ["565", "佤族", "151", "54"], ["566", "珞巴族", "151", "55"], ["567", "畲族", "151", "56"], ["568", "其他", "151", "57"], ["569", "独自居住", "152", "1"], ["570", "与配偶居住", "152", "2"], ["571", "与子女合住", "152", "3"], ["572", "与亲戚合住", "152", "4"], ["573", "其他", "152", "5"], ["574", "服务机构", "152", "6"], ["575", "中国工商银行", "154", "1"], ["576", "中国建设银行", "154", "2"], ["577", "中国银行", "154", "3"], ["578", "中国农业银行", "154", "4"], ["579", "交通银行", "154", "5"], ["580", "招商银行", "154", "6"], ["581", "中国邮政储蓄银行", "154", "7"], ["582", "城镇居民医疗保险", "155", "1"], ["583", "城镇职工医疗保险", "155", "2"], ["584", "商业保险", "155", "3"], ["585", "农村合作医疗", "155", "4"], ["586", "其他", "155", "5"], ["587", "子女赡养", "156", "1"], ["588", "养老保险", "156", "2"], ["589", "退休金", "156", "3"], ["590", "低保", "156", "4"], ["591", "其他补贴", "156", "5"], ["592", "A型血", "157", "1"], ["593", "B型血", "157", "2"], ["594", "AB型血", "157", "3"], ["595", "O型血", "157", "4"], ["596", "特殊血型", "157", "5"], ["597", "能力完好", "158", "1"], ["598", "轻度失能", "158", "2"], ["599", "中度失能", "158", "3"], ["600", "重度失能", "158", "4"], ["601", "无残疾", "159", "1"], ["602", "轻度残疾", "159", "2"], ["603", "中度残疾", "159", "3"], ["604", "重度残疾", "159", "4"], ["605", "未上学", "160", "1"], ["606", "小学", "160", "2"], ["607", "初中", "160", "3"], ["608", "中专", "160", "4"], ["609", "高中", "160", "5"], ["610", "大专", "160", "6"], ["611", "本科", "160", "7"], ["612", "硕士", "160", "8"], ["613", "博士", "160", "9"], ["614", "祖孙", "161", "1"], ["615", "父子", "161", "2"], ["616", "母子", "161", "3"], ["617", "父女", "161", "4"], ["618", "母女", "161", "5"], ["619", "儿媳", "161", "6"], ["620", "婆媳", "161", "7"], ["621", "男", "162", "1"], ["622", "女", "162", "2"], ["623", "仓库中", "163", "1"], ["624", "售卖中", "163", "2"], ["625", "60-70", "164", "1"], ["626", "70-80", "164", "2"], ["627", "80-90", "164", "3"], ["628", "90-100", "164", "4"], ["629", "100以上", "164", "5"], ["630", "补贴比例", "165", "1"], ["631", "补贴金额", "165", "2"], ["632", "补贴金额", "166", "1"], ["633", "补贴代金券", "166", "2"], ["636", "件", "168", "1"], ["637", "个", "168", "2"], ["638", "次", "169", "1"], ["639", "小时", "169", "2"], ["641", "循环满减", "170", "1"], ["642", "阶梯满减", "170", "2"]]

/**
 * 获取指定字典类型ID的字典列表
 * @param dicTypeId
 * @return {list}
 */
var getDictionaryList = function (dicTypeId) {
    var list = [];
    for (var i in staticDictionary) {
        if (staticDictionary[i][2] == dicTypeId) {
            list.push({
                key: parseInt(staticDictionary[i][0]),
                value: staticDictionary[i][1],
                order: parseInt(staticDictionary[i][3])
            })
        }
    }
    list.sort(function (a, b) {
        return a.order - b.order;
    })
    return list;
};

var getDictionaryName = function (dicId) {
    for (var i in staticDictionary) {
        if (staticDictionary[i][0] == dicId) {
            return staticDictionary[i][1]
        }
    }
}
T.d = getDictionaryList;
T.t = getDictionaryName;


T.copyProperties = function (source, target) {
    if (source == null) {
        return {};
    }
    if (typeof source != 'object') {
        throw new Error(source + "不是对象");
    }
    if (!target) {
        target = {}
    }
    for (var propertyKey in source) {
        var propertyValue = source[propertyKey]
        if (propertyValue == null || typeof propertyValue == 'undefined') {
            continue
        }
        target[propertyKey] = propertyValue;
    }
    return target;
}

T.copyPropertiesNotSkipUndefined = function (source, target) {
    if (source == null) {
        return {};
    }
    if (typeof source != 'object') {
        throw new Error(source + "不是对象");
    }
    if (!target) {
        target = {}
    }
    for (var propertyKey in source) {
        target[propertyKey] = source[propertyKey]
    }
    return target;
}

T.clearObj = function (obj) {
    if (obj == null) {
        obj = {}
        return obj;
    }
    if (typeof obj != 'object') {
        throw new Error(obj + "不是对象");
    }
    for (var propertyKey in obj) {
        obj[propertyKey] = null
    }
    return obj;
}

T.getParameter = function (key) {
    var url = location.search;
    if (url.indexOf("?") === -1) {
        return undefined
    }

    var str = url.substr(1);
    var strs = str.split("&");
    for (var i = 0; i < strs.length; i++) {
        var keyValue = strs[i].split("=");
        if (keyValue.length !== 2) {
            continue
        }

        if (key === keyValue[0]) {
            return keyValue[1];
        }
    }
    return undefined
}

T.getParameters = function () {
    var url = location.search;
    if (url.indexOf("?") === -1) {
        return {}
    }

    var theRequest = {}
    var str = url.substr(1);
    var strs = str.split("&");
    for (var i = 0; i < strs.length; i++) {
        var keyValue = strs[i].split("=");
        if (keyValue.length !== 2) {
            continue
        }
        theRequest[keyValue[0]] = keyValue[1];
    }
    return theRequest
}

/**
 * 返回符合金额格式（最多保留两位小数的Number）
 * @param val
 * @returns {number}
 */
parseMoney = function (val) {
    var num = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.'];
    var newVal = '';
    var hasFirstDot = false;
    for (var i = 0; i < val.length; i++) {
        var c = val.charAt(i);
        if (num.indexOf(c) >= 0) {
            if (c == '.') {
                if (!hasFirstDot) {
                    newVal += c;
                    hasFirstDot = true;
                } else {
                    continue;
                }
            } else {
                newVal += c;
            }
        }
    }
    return parseFloat(parseFloat(newVal).toFixed(2));
}
/**
 * 返回金额格式的string
 * @param value
 * @returns {number|string|string}
 */
var filterMoney = function (value) {
    value = Math.round(parseFloat(value) * 100) / 100;
    var xsd = value.toString().split(".");
    if (xsd.length == 1) {
        value = value.toString() + ".00";
        return value;
    }
    if (xsd.length > 1) {
        if (xsd[1].length < 2) {
            value = value.toString() + "0";
        }
        return value;
    }
}
