
<root>
    <sir>
        <name>tutorials</name>
        <source>https://github.com/Liang813/tutorials</source>
        <bug>
            <id>tutorials382</id>
            <errormessage>None</errormessage>
            <describe>CrossEntropy's size does not match that needed by the mask</describe>
            <operateScore>1</operateScore>
            <type>shape mismatch</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>5</support_level>
            <similar_bugs>keras11657, edward46, rlpyt27, ciphergan4</similar_bugs>
            <buggyVersion>
                <buggytestCmd>tutorials382-buggy.sh</buggytestCmd>
                <buggycommit>a46b6437b74c30b9683631942b3157788b5cb78f</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>tutorials382-fix.sh</fixtestCmd>
                <fixcommit>b93ce6e23042da153d6ee04b067e1f3d827d8189</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/pytorch/tutorials/pull/382</issue_url>
            <commit_url>https://github.com/pytorch/tutorials/pull/382/commits/b93ce6e23042da153d6ee04b067e1f3d827d8189</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>edward</name>
        <source>https://github.com/Liang813/edward</source>
        <bug>
            <id>edward46</id>
            <errormessage>AssertionError</errormessage>
            <describe>Match outputs of distribution methods to SciPy convention</describe>
            <operateScore>1</operateScore>
            <type>shape mismatch</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>5</support_level>
            <similar_bugs>keras11657, tutorials382, ciphergan4, rlpyt27</similar_bugs>
            <buggyVersion>
                <buggytestCmd>edward46-buggy.sh</buggytestCmd>
                <buggycommit>42ac6587b6f7d4ae7593b5b8ffa8cc3942d95958</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>edward46-fix.sh</fixtestCmd>
                <fixcommit>14ec644e08af346e9004a8ee3a27c0a94aad698c</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/blei-lab/edward/issues/46</issue_url>
            <commit_url>https://github.com/blei-lab/edward/pull/89/commits/14ec644e08af346e9004a8ee3a27c0a94aad698c</commit_url>
            <detection_tools>ShapeFlow</detection_tools>
        </bug>
    </sir>

    <sir>
        <name>models</name>
        <source>https://github.com/Liang813/models</source>
        <bug>
            <id>models166</id>
            <errormessage>None</errormessage>
            <describe>Use the tensorflow cross entropy function to prevent nan losses.</describe>
            <operateScore>3</operateScore>
            <type>numeric error</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>2</support_level>
            <similar_bugs>deep-learning-tensorflow</similar_bugs>
            <buggyVersion>
                <buggytestCmd>models166-buggy.sh</buggytestCmd>
                <buggycommit>05630a7578b25390f469b2f91f2c2326e5ed539b</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>models166-fix.sh</fixtestCmd>
                <fixcommit>d8169710322cb6e20be61fef179e66d56d2b1151</fixcommit>
            </fixVersion>
            <character>1</character>
            <issue_url>https://github.com/tensorflow/models/issues/166</issue_url>
            <commit_url>https://github.com/tensorflow/models/commit/d8169710322cb6e20be61fef179e66d56d2b1151</commit_url>
            <detection_tools>DEBAR, GRIST</detection_tools>
        </bug>
    </sir>

    <sir>
        <name>Deep-Learning-TensorFlow</name>
        <source>https://github.com/Liang813/Deep-Learning-TensorFlow</source>
        <bug>
            <id>deep-learning-tensorflow</id>
            <errormessage>None</errormessage>
            <describe>NaN may occur when calculating the cross entropy loss</describe>
            <operateScore>1</operateScore>
            <type>numeric error</type>
            <!--            <localScore></localScore>-->
            <!--            <fixLength></fixLength>-->
            <support_level>2</support_level>
            <similar_bugs>models166</similar_bugs>
            <buggyVersion>
                <buggytestCmd>Deep-Learning-TensorFlow-buggy.sh</buggytestCmd>
                <buggycommit>53c69ce3e6af6213e73cff84c675c93c9a2a47f7</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>Deep-Learning-TensorFlow-fix.sh</fixtestCmd>
                <fixcommit>726b371d42e853e61b4deac06ed064a61a619572</fixcommit>
            </fixVersion>
            <character>1</character>
            <issue_url>https://github.com/blackecho/Deep-Learning-TensorFlow/commit/726b371d42e853e61b4deac06ed064a61a619572</issue_url>
            <commit_url>https://github.com/blackecho/Deep-Learning-TensorFlow/commit/726b371d42e853e61b4deac06ed064a61a619572</commit_url>
            <detection_tools>GRIST</detection_tools>
        </bug>
    </sir>

    <sir>
        <name>GPflow</name>
        <source>https://github.com/Liang813/GPflow</source>
        <bug>
            <id>gpflow99</id>
            <errormessage>FailedPreconditionError</errormessage>
            <describe>Not all variables in AF session are initialized</describe>
            <operateScore>1</operateScore>
            <type>API misuse</type>
            <!--            <localScore></localScore>-->
            <!--            <fixLength></fixLength>-->
            <support_level>3</support_level>
            <similar_bugs>tensorflow3168, tensorpack1008</similar_bugs>
            <buggyVersion>
                <buggytestCmd>Gpflow99-buggy.sh</buggytestCmd>
                <buggycommit>4ea1fa8b74861d599e749b20d1ab11edced8039a</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>Gpflow99-fix.sh</fixtestCmd>
                <fixcommit>dad657e0be26732596c1c8c92c2f253de48513e9</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/GPflow/GPflow/issues/99</issue_url>
            <commit_url>https://github.com/GPflow/GPflow/pull/100/commits/dad657e0be26732596c1c8c92c2f253de48513e9</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>keras</name>
        <source>https://github.com/Liang813/keras</source>
        <bug>
            <id>keras11657</id>
            <errormessage>TypeError</errormessage>
            <describe>KerasRegressor.predict does not squeeze batch dims,If the input to KerasRegressor.predict() is an array with one example, then the output should be a 1D array with one example, not a 0D array.</describe>
            <operateScore>1</operateScore>
            <type>shape mismatch</type>
            <!--            <localScore></localScore>-->
            <!--            <fixLength></fixLength>-->
            <support_level>5</support_level>
            <similar_bugs>tutorials382, edward46, ciphergan4, rlpyt27</similar_bugs>
            <buggyVersion>
                <buggytestCmd>keras11657-buggy.sh</buggytestCmd>
                <buggycommit>7cd6c59789c8e469c0d3cab6bca7ae3d2d028002</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>keras11657-fix.sh</fixtestCmd>
                <fixcommit>c2d01f5ea69170a2365050368dfa534b75592c06</fixcommit>
            </fixVersion>
            <character>1</character>
            <issue_url>https://github.com/keras-team/keras/issues/11657</issue_url>
            <commit_url>https://github.com/keras-team/keras/pull/11658/commits/c2d01f5ea69170a2365050368dfa534b75592c06</commit_url>
            <detection_tools>ShapeFlow</detection_tools>
        </bug>
    </sir>

    <sir>
        <name>allennlp</name>
        <source>https://github.com/Liang813/allennlp</source>
        <bug>
            <id>allennlp4612</id>
            <errormessage>None</errormessage>
            <describe>NaN grads appear when an empty string is given</describe>
            <operateScore>1</operateScore>
            <type>numeric error</type>
            <!--            <localScore></localScore>-->
            <!--            <fixLength></fixLength>-->
            <support_level>3</support_level>
            <similar_bugs>keras2672, pytorch-lightning139</similar_bugs>
            <buggyVersion>
                <buggytestCmd>allennlp4612-buggy.sh</buggytestCmd>
                <buggycommit>e840a589afc4bfdac0165a8650145259a7603807</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>allennlp4612-fix.sh</fixtestCmd>
                <fixcommit>b2bb2a364320142c733e306df1d04e4e8237150d</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/allenai/allennlp/issues/4612</issue_url>
            <commit_url>https://github.com/allenai/allennlp/pull/4615/commits/b2bb2a364320142c733e306df1d04e4e8237150d</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>segmentation_models.pytorch</name>
        <source>https://github.com/Liang813/segmentation_models.pytorch</source>
        <bug>
            <id>segmentation_models.pytorch186</id>
            <errormessage>AssertionError</errormessage>
            <describe>This Bug is due to the fact that the divisor is not the same type as the dividend, resulting in the final result being 0</describe>
            <operateScore>1</operateScore>
            <type>type mismatch</type>
            <!--            <localScore></localScore>-->
            <!--            <fixLength></fixLength>-->
            <support_level>7</support_level>
            <similar_bugs>texar-pytorch94, pytorch-ts1, tensorpack408, tensorflowtts70, openkiwi38, tensorflowtts50</similar_bugs>
            <buggyVersion>
                <buggytestCmd>segmentation_models.pytorch186-buggy.sh</buggytestCmd>
                <buggycommit>ecc848f7b600d0e5cc3a7bbe2a139e97de22da49</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>segmentation_models.pytorch186-fix.sh</fixtestCmd>
                <fixcommit>6884ebf7b4a995cd9f53df8fc529e0f74c438851</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/qubvel/segmentation_models.pytorch/pull/186</issue_url>
            <commit_url>https://github.com/qubvel/segmentation_models.pytorch/pull/186/commits/6884ebf7b4a995cd9f53df8fc529e0f74c438851</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>keras</name>
        <source>https://github.com/Liang813/keras</source>
        <bug>
            <id>keras2672</id>
            <errormessage>None</errormessage>
            <describe>cos mode does not carefully deal with division by zero, might be the cause of NaN. output = K.batch_dot(l1, l2, self.dot_axes) / denominator  </describe>
            <operateScore>1</operateScore>
            <type>numeric error</type>
            <!--            <localScore></localScore>-->
            <!--            <fixLength></fixLength>-->
            <support_level>3</support_level>
            <similar_bugs>allennlp4612, pytorch-lightning139</similar_bugs>
            <buggyVersion>
                <buggytestCmd>keras2672-buggy.sh</buggytestCmd>
                <buggycommit>973b5570aa4aea71323d6c08614d5e2a8f50a6ec</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>keras2672-fix.sh</fixtestCmd>
                <fixcommit>58cbb4bf425fc80771ebfe8053cbfe928a081b61</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/keras-team/keras/issues/2672</issue_url>
            <commit_url>https://github.com/keras-team/keras/pull/2725/commits/58cbb4bf425fc80771ebfe8053cbfe928a081b61</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>tensorflow</name>
        <source>https://github.com/Liang813/tensorflow</source>
        <bug>
            <id>tensorflow3168</id>
            <errormessage>FailedPreconditionError</errormessage>
            <describe>Initialize local variables in fully_connected_preloaded</describe>
            <operateScore>1</operateScore>
            <type>API misuse</type>
            <!--            <localScore></localScore>-->
            <!--            <fixLength></fixLength>-->
            <support_level>3</support_level>
            <similar_bugs>gpflow99, tensorpack1008</similar_bugs>
            <buggyVersion>
                <buggytestCmd>tensorflow3168-buggy.sh</buggytestCmd>
                <buggycommit>aedd2173deef51661ab0cabcb9009d249e744e31</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>tensorflow3168-fix.sh</fixtestCmd>
                <fixcommit>11f92de8c8c9cd35106c0f4dd3b0bfaac7581a2f</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/tensorflow/tensorflow/issues/3168</issue_url>
            <commit_url>https://github.com/tensorflow/tensorflow/commit/11f92de8c8c9cd35106c0f4dd3b0bfaac7581a2f</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

<!--    <sir>-->
<!--        <name>Deep-Learning-TensorFlow</name>-->
<!--        <source>https://github.com/Liang813/Deep-Learning-TensorFlow</source>-->
<!--        <bug>-->
<!--            <id>deep-learning-tensorflow1</id>-->
<!--            <errormessage>None</errormessage>-->
<!--            <describe>The learning_rate is not small enough to cause the parameter to explode</describe>-->
<!--            <operateScore>1</operateScore>-->
<!--            <type>IPS</type>-->
<!--&lt;!&ndash;            <localScore></localScore>&ndash;&gt;-->
<!--&lt;!&ndash;            <fixLength></fixLength>&ndash;&gt;-->
<!--            <support_level>2</support_level>-->
<!--            <similar_bugs>gail_ppo_tf20</similar_bugs>-->
<!--            <buggyVersion>-->
<!--                <buggytestCmd>Deep-Learning-TensorFlow1-buggy.sh</buggytestCmd>-->
<!--                <buggycommit>907833ab90e27af156484e1aa140ed656e4b4a15</buggycommit>-->
<!--            </buggyVersion>-->
<!--            <fixVersion>-->
<!--                <fixtestCmd>Deep-Learning-TensorFlow1-fix.sh</fixtestCmd>-->
<!--                <fixcommit>b9bc441fdec5e8a5a1c4285d724dd43b327b4cf8</fixcommit>-->
<!--            </fixVersion>-->
<!--            <character>1</character>-->
<!--            <issue_url>https://github.com/gabrieleangeletti/Deep-Learning-TensorFlow/pull/1</issue_url>-->
<!--            <commit_url>https://github.com/gabrieleangeletti/Deep-Learning-TensorFlow/pull/1/commits/b9bc441fdec5e8a5a1c4285d724dd43b327b4cf8</commit_url>-->
<!--            <detection_tools></detection_tools>-->
<!--        </bug>-->
<!--    </sir>-->

    <sir>
        <name>Deep-Learning-TensorFlow</name>
        <source>https://github.com/Liang813/Deep-Learning-TensorFlow</source>
        <bug>
            <id>deep-learning-tensorflow5</id>
            <errormessage>None</errormessage>
            <describe>missing tf.nn.softmax() in create_softmax_layer</describe>
            <operateScore>1</operateScore>
            <type>architecture design convention</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>2</support_level>
            <similar_bugs>deep-learning-tensorflow0</similar_bugs>
            <buggyVersion>
                <buggytestCmd>Deep-Learning-TensorFlow5-buggy.sh</buggytestCmd>
                <buggycommit>ded661243a7bf86975e4f29fdf192d7dc4a72770</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>Deep-Learning-TensorFlow5-fix.sh</fixtestCmd>
                <fixcommit>1bcc1efcce5772af15c8e787f21ae60a923e6731</fixcommit>
            </fixVersion>
            <character>1</character>
            <issue_url>https://github.com/gabrieleangeletti/Deep-Learning-TensorFlow/issues/5</issue_url>
            <commit_url>https://github.com/gabrieleangeletti/Deep-Learning-TensorFlow/commit/1bcc1efcce5772af15c8e787f21ae60a923e6731</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>models</name>
        <source>https://github.com/Liang813/models</source>
        <bug>
            <id>models857</id>
            <errormessage>ValueError</errormessage>
            <describe>Function using error, parameter using parameter sequence using error.</describe>
            <operateScore>1</operateScore>
            <type>API misuse</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>4</support_level>
            <similar_bugs>sact1, models1040, seq2seq130</similar_bugs>
            <buggyVersion>
                <buggytestCmd>models857-buggy.sh</buggytestCmd>
                <buggycommit>4b53df3cf4f8e15816d5e2d5093ec855fb4e410c</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>models857-fix.sh</fixtestCmd>
                <fixcommit>e93ec37201f5f2116933ae96e505f409ddbf344d</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/tensorflow/models/issues/857</issue_url>
            <commit_url>https://github.com/tensorflow/models/commit/e93ec37201f5f2116933ae96e505f409ddbf344d</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

<!--    <sir>-->
<!--        <name>pytorch-pose</name>-->
<!--        <source>https://github.com/Liang813/pytorch-pose</source>-->
<!--        <bug>-->
<!--            <id>pytorch-pose116</id>-->
<!--            <errormessage>None</errormessage>-->
<!--            <describe>Input image width and height position reversed</describe>-->
<!--            <operateScore>1</operateScore>-->
<!--            <type>shape mismatch</type>-->
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
<!--            <support_level>5</support_level>-->
<!--            <buggyVersion>-->
<!--                <buggytestCmd>pytorch-pose116-buggy.sh</buggytestCmd>-->
<!--                <buggycommit>e09fb262c473e705075d20e8981368e94cdfc4a3</buggycommit>-->
<!--            </buggyVersion>-->
<!--            <fixVersion>-->
<!--                <fixtestCmd>pytorch-pose116-fix.sh</fixtestCmd>-->
<!--                <fixcommit>6d48375fde4d6ff0322775b342d563bcaf3f818a</fixcommit>-->
<!--            </fixVersion>-->
<!--            <character>0</character>-->
<!--            <issue_url>https://github.com/bearpaw/pytorch-pose/pull/116</issue_url>-->
<!--            <commit_url>https://github.com/bearpaw/pytorch-pose/pull/117/commits/6d48375fde4d6ff0322775b342d563bcaf3f818a</commit_url>-->
<!--            <detection_tools></detection_tools>-->
<!--        </bug>-->
<!--    </sir>-->

    <sir>
        <name>pytorch-lightning</name>
        <source>https://github.com/Liang813/pytorch-lightning</source>
        <bug>
            <id>pytorch-lightning139</id>
            <errormessage>ZeroDivisionError</errormessage>
            <describe>If dataset size = 1 batch, a zero division error will be reported</describe>
            <operateScore>1</operateScore>
            <type>numeric error</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>3</support_level>
            <similar_bugs>keras2672, allennlp4612</similar_bugs>
            <buggyVersion>
                <buggytestCmd>pytorch-lightning139-buggy.sh</buggytestCmd>
                <buggycommit>e646d745da3973398455a6b2abd7005edd2103d2</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>pytorch-lightning139-fix.sh</fixtestCmd>
                <fixcommit>26d3f0dbea3ebb4d0db58f0f382fc633f275d067</fixcommit>
            </fixVersion>
            <character>1</character>
            <issue_url>https://github.com/PyTorchLightning/pytorch-lightning/issues/139</issue_url>
            <commit_url>https://github.com/PyTorchLightning/pytorch-lightning/commit/26d3f0dbea3ebb4d0db58f0f382fc633f275d067</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>transformers</name>
        <source>https://github.com/Liang813/transformers</source>
        <bug>
            <id>transformers1152</id>
            <errormessage>TypeError</errormessage>
            <describe>List does not match tuple</describe>
            <operateScore>1</operateScore>
            <type>type mismatch</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>4</support_level>
            <similar_bugs>dcgan-tensorflow108, models1707, probability1010</similar_bugs>
            <buggyVersion>
                <buggytestCmd>transformers1152-buggy.sh</buggytestCmd>
                <buggycommit>caf1d116a62a324a2b0ccfd92ca6c095d5368dde</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>transformers1152-fix.sh</fixtestCmd>
                <fixcommit>07e21307b6b16350425ea08790c7e20c081a3b3f</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/huggingface/transformers/pull/1152</issue_url>
            <commit_url>https://github.com/huggingface/transformers/pull/1152/commits/07e21307b6b16350425ea08790c7e20c081a3b3f</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>transformers</name>
        <source>https://github.com/Liang813/transformers</source>
        <bug>
            <id>transformers1962</id>
            <errormessage>ValueError</errormessage>
            <describe>TFBertModel ValueError: Tried to convert 'dims' to a tensor and failed. Error: Cannot convert a partially known TensorShape to a Tensor</describe>
            <operateScore>1</operateScore>
            <type>shape mismatch</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>2</support_level>
            <similar_bugs>zhusuan2</similar_bugs>
            <buggyVersion>
                <buggytestCmd>transformers1962-buggy.sh</buggytestCmd>
                <buggycommit>adb5c79ff2ffcd2e4a43a12f082cca55f7630a96</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>transformers1962-fix.sh</fixtestCmd>
                <fixcommit>4a666885b501ed6bfd344ec2c4c16d80da8aab79</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/huggingface/transformers/issues/1962</issue_url>
            <commit_url>https://github.com/huggingface/transformers/pull/1966/commits/a1aec9c2a1776832c28d3a9975d2f15999f089ac</commit_url>
            <detection_tools>ShapeFlow</detection_tools>
        </bug>
    </sir>

    <sir>
        <name>botorch</name>
        <source>https://github.com/Liang813/botorch</source>
        <bug>
            <id>botorch162</id>
            <errormessage>None</errormessage>
            <describe>inv_transform was crapping out when drawing a large number of samples because the base sample was exactly 1.0( see issue #161). While we were previously subtracting off a small number (1e-10), this number wasn't sufficient. I found that (1-e6) was the smallest base 10 number we could subtract off to get rid of the -inf.</describe>
            <operateScore>1</operateScore>
            <type>numeric error</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>1</support_level>
            <similar_bugs></similar_bugs>
            <buggyVersion>
                <buggytestCmd>botorch162-buggy.sh</buggytestCmd>
                <buggycommit>8b17815b736cf0b95cc6a8c0ad9d8867a2d541bc</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>botorch162-fix.sh</fixtestCmd>
                <fixcommit>ba370e829473a2ab74bfd16bea45c8919a24c438</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/pytorch/botorch/pull/162</issue_url>
            <commit_url>https://github.com/pytorch/botorch/commit/ba370e829473a2ab74bfd16bea45c8919a24c438</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>ggnn.pytorch</name>
        <source>https://github.com/Liang813/ggnn.pytorch</source>
        <bug>
            <id>ggnn.pytorch9</id>
            <errormessage>IndexError</errormessage>
            <describe>Indexing 0-dim tensor error</describe>
            <operateScore>1</operateScore>
            <type>API misuse</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>1</support_level>
            <similar_bugs></similar_bugs>
            <buggyVersion>
                <buggytestCmd>ggnn.pytorch9-buggy.sh</buggytestCmd>
                <buggycommit>0c7897fe9b05e9b4f9a963ff55bd3ad917ea734e</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>ggnn.pytorch9-fix.sh</fixtestCmd>
                <fixcommit>9c58ca60fd9c389ffd41b7cb4b10cade592344f8</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/chingyaoc/ggnn.pytorch/pull/9</issue_url>
            <commit_url>https://github.com/chingyaoc/ggnn.pytorch/pull/9/commits/9c58ca60fd9c389ffd41b7cb4b10cade592344f8</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>dcgan-completion.tensorflow</name>
        <source>https://github.com/Liang813/seq2seq</source>
        <bug>
            <id>dcgan-completion.tensorflow</id>
            <errormessage>TypeError</errormessage>
            <describe>Arguments to one function are taken into another function</describe>
            <operateScore>2</operateScore>
            <type>API misuse</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>1</support_level>
            <similar_bugs></similar_bugs>
            <buggyVersion>
                <buggytestCmd>dcgan-completion.tensorflow-buggy.sh</buggytestCmd>
                <buggycommit>bba1b1592bc928c787aa9dc953bcf2cf540b4eb9</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>dcgan-completion.tensorflow-fix.sh</fixtestCmd>
                <fixcommit>e2efc870054836172cbed70dfc08da6fc0ff2e04</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/bamos/dcgan-completion.tensorflow/commit/e2efc870054836172cbed70dfc08da6fc0ff2e04</issue_url>
            <commit_url>https://github.com/bamos/dcgan-completion.tensorflow/commit/e2efc870054836172cbed70dfc08da6fc0ff2e04</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>sact</name>
        <source>https://github.com/Liang813/sact</source>
        <bug>
            <id>sact1</id>
            <errormessage>ValueError</errormessage>
            <describe>Function using error, parameter using parameter sequence using error.</describe>
            <operateScore>1</operateScore>
            <type>API misuse</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>4</support_level>
            <similar_bugs>models857, models1040, seq2seq130</similar_bugs>
            <buggyVersion>
                <buggytestCmd>sact1-buggy.sh</buggytestCmd>
                <buggycommit>10e09ab327ab57f2520ef260b5c57fb523eb2980</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>sact1-fix.sh</fixtestCmd>
                <fixcommit>98a8fd0d623261b32f8b6bcff63c8000a71b1e18</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/mfigurnov/sact/commit/98a8fd0d623261b32f8b6bcff63c8000a71b1e18</issue_url>
            <commit_url>https://github.com/mfigurnov/sact/commit/98a8fd0d623261b32f8b6bcff63c8000a71b1e18</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>models</name>
        <source>https://github.com/Liang813/models</source>
        <bug>
            <id>models1063</id>
            <errormessage>TypeError</errormessage>
            <describe>The assignment of two arguments to the function is reversed</describe>
            <operateScore>1</operateScore>
            <type>API misuse</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>2</support_level>
            <similar_bugs>models1220</similar_bugs>
            <buggyVersion>
                <buggytestCmd>models1063-buggy.sh</buggytestCmd>
                <buggycommit>fdc0c4ab1b039b6085478b36b5cd3cad038941ec</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>models1063-fix.sh</fixtestCmd>
                <fixcommit>5c535343059ceec4b9ca9decdc8c9da8c3e58ced</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/tensorflow/models/pull/1063</issue_url>
            <commit_url>https://github.com/tensorflow/models/pull/1063/commits/5c535343059ceec4b9ca9decdc8c9da8c3e58ced</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>models</name>
        <source>https://github.com/Liang813/models</source>
        <bug>
            <id>models1707</id>
            <errormessage>AssertionError</errormessage>
            <describe>This works around a bug in earlier proto versions that automatically infer these values to be integer instead of float.</describe>
            <operateScore>1</operateScore>
            <type>type mismatch</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>4</support_level>
            <similar_bugs>dcgan-tensorflow108, transformers1152, probability1010</similar_bugs>
            <buggyVersion>
                <buggytestCmd>models1707-buggy.sh</buggytestCmd>
                <buggycommit>434c277677ba973ae6acc21fcc3d616e1bb7f1df</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>models1707-fix.sh</fixtestCmd>
                <fixcommit>c4ba26b4d36ea8d339200bab6bd6fea6fd4af11b</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/tensorflow/models/pull/1707</issue_url>
            <commit_url>https://github.com/tensorflow/models/commit/c4ba26b4d36ea8d339200bab6bd6fea6fd4af11b</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

<!--    <sir>-->
<!--        <name>models</name>-->
<!--        <source>https://github.com/Liang813/models</source>-->
<!--        <bug>-->
<!--            <id>models23</id>-->
<!--            <errormessage>None</errormessage>-->
<!--            <describe>The normalization function was used incorrectly, causing NaN to appear when calculating the loss</describe>-->
<!--            <operateScore>3</operateScore>-->
<!--            <type>IPS</type>-->
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
<!--            <buggyVersion>-->
<!--                <buggytestCmd>models23-buggy.sh</buggytestCmd>-->
<!--                <buggycommit>38079f01d0cdbeb8e3aa6c4ef0a8d5b5c1e4d9a0</buggycommit>-->
<!--            </buggyVersion>-->
<!--            <fixVersion>-->
<!--                <fixtestCmd>models23-fix.sh</fixtestCmd>-->
<!--                <fixcommit>55a34ae564f5ab49adaf98bd4552dcd4bf8f85f3</fixcommit>-->
<!--            </fixVersion>-->
<!--            <character>1</character>-->
<!--            <issue_url>https://github.com/tensorflow/models/issues/23</issue_url>-->
<!--            <commit_url>https://github.com/tensorflow/models/commit/55a34ae564f5ab49adaf98bd4552dcd4bf8f85f3</commit_url>-->
<!--            <detection_tools></detection_tools>-->
<!--        </bug>-->
<!--    </sir>-->

    <sir>
        <name>TensorFlow-Examples</name>
        <source>https://github.com/Liang813/TensorFlow-Examples</source>
        <bug>
            <id>tensorflow-examples10</id>
            <errormessage>None</errormessage>
            <describe>Author forgot to compute the mean loss over a batch. It is not a problem with small batch size, but it could lead to issues with large batch size, as it leads to unrepresentative cost (NaN) ...</describe>
            <operateScore>1</operateScore>
            <type>numeric error</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>2</support_level>
            <similar_bugs>dcgan-tensorflow17</similar_bugs>
            <buggyVersion>
                <buggytestCmd>TensorFlow-Examples10-buggy.sh</buggytestCmd>
                <buggycommit>844bbfce6d5a872e547fa27c601c5816d4b39f91</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>TensorFlow-Examples10-fix.sh</fixtestCmd>
                <fixcommit>742675db9e3085579b1325b21743fb3a4bc804ab</fixcommit>
            </fixVersion>
            <character>1</character>
            <issue_url>https://github.com/aymericdamien/TensorFlow-Examples/issues/10</issue_url>
            <commit_url>https://github.com/aymericdamien/TensorFlow-Examples/commit/742675db9e3085579b1325b21743fb3a4bc804ab</commit_url>
            <detection_tools>DEBAR, GRIST</detection_tools>
        </bug>
    </sir>

    <sir>
        <name>Deep-Learning-TensorFlow</name>
        <source>https://github.com/Liang813/Deep-Learning-TensorFlow</source>
        <bug>
            <id>deep-learning-tensorflow0</id>
            <errormessage>None</errormessage>
            <describe>Use tf.nn.softmax() only in the case of cross entropy loss</describe>
            <operateScore>2</operateScore>
            <type>architecture design convention</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>2</support_level>
            <similar_bugs>deep-learning-tensorflow5</similar_bugs>
            <buggyVersion>
                <buggytestCmd>Deep-Learning-TensorFlow0-buggy.sh</buggytestCmd>
                <buggycommit>1bcc1efcce5772af15c8e787f21ae60a923e6731</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>Deep-Learning-TensorFlow0-fix.sh</fixtestCmd>
                <fixcommit>20d1b59e69d4ae56ff9bf0c7263d3f2e47d4cdc9</fixcommit>
            </fixVersion>
            <character>1</character>
            <issue_url>https://github.com/blackecho/Deep-Learning-TensorFlow/commit/20d1b59e69d4ae56ff9bf0c7263d3f2e47d4cdc9</issue_url>
            <commit_url>https://github.com/blackecho/Deep-Learning-TensorFlow/commit/20d1b59e69d4ae56ff9bf0c7263d3f2e47d4cdc9</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>DCGAN-tensorflow</name>
        <source>https://github.com/Liang813/DCGAN-tensorflow</source>
        <bug>
            <id>dcgan-tensorflow108</id>
            <errormessage>TypeError</errormessage>
            <describe>A result of type int is required, but a result of type float is returned</describe>
            <operateScore>1</operateScore>
            <type>type mismatch</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>4</support_level>
            <similar_bugs>models1707, transformers1152, probability1010</similar_bugs>
            <buggyVersion>
                <buggytestCmd>DCGAN-tensorflow108-buggy.sh</buggytestCmd>
                <buggycommit>9166ef99bf9fcd1d0bf641ae752428bb06903b00</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>DCGAN-tensorflow108-fix.sh</fixtestCmd>
                <fixcommit>3d7395aa4a0663ebb20aa2568ab91f70e555edf0</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/carpedm20/DCGAN-tensorflow/issues/108</issue_url>
            <commit_url>https://github.com/carpedm20/DCGAN-tensorflow/commit/3d7395aa4a0663ebb20aa2568ab91f70e555edf0</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>DCGAN-tensorflow</name>
        <source>https://github.com/Liang813/DCGAN-tensorflow</source>
        <bug>
            <id>dcgan-tensorflow17</id>
            <errormessage>InvalidArgumentError</errormessage>
            <describe>Failing to load data during Training on CelebA</describe>
            <operateScore>5</operateScore>
            <type>API misuse</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>2</support_level>
            <similar_bugs>tensorflow-examples10</similar_bugs>
            <buggyVersion>
                <buggytestCmd>DCGAN-tensorflow17-buggy.sh</buggytestCmd>
                <buggycommit>eb2ffe490f61e478227bf539f75ed0b6f9bb1d6b</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>DCGAN-tensorflow17-fix.sh</fixtestCmd>
                <fixcommit>550534e89c93993eadc817af0d68fdb09d82d4c6</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/carpedm20/DCGAN-tensorflow/issues/17</issue_url>
            <commit_url>https://github.com/carpedm20/DCGAN-tensorflow/commit/550534e89c93993eadc817af0d68fdb09d82d4c6</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>keras</name>
        <source>https://github.com/Liang813/keras</source>
        <bug>
            <id>keras1141</id>
            <errormessage>ValueError</errormessage>
            <describe>Setting an array element with a sequence.</describe>
            <operateScore>1</operateScore>
            <type>type mismatch</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>2</support_level>
            <similar_bugs>mnemonicreader3</similar_bugs>
            <buggyVersion>
                <buggytestCmd>keras1141-buggy.sh</buggytestCmd>
                <buggycommit>d400fc45129fbd4d3fe83345a69ec5973bb29a37</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>keras1141-fix.sh</fixtestCmd>
                <fixcommit>07ffc76b9318ab1197ce61838992960e9abb3c22</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/keras-team/keras/issues/1141</issue_url>
            <commit_url>https://github.com/keras-team/keras/commit/07ffc76b9318ab1197ce61838992960e9abb3c22</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>PILCO</name>
        <source>https://github.com/Liang813/PILCO</source>
        <bug>
            <id>pilco25</id>
            <errormessage>None</errormessage>
            <describe>Function usage error during Initialisation of ExponentialReward</describe>
            <operateScore>1</operateScore>
            <type>API misuse</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>1</support_level>
            <similar_bugs></similar_bugs>
            <buggyVersion>
                <buggytestCmd>PILCO25-buggy.sh</buggytestCmd>
                <buggycommit>6ebcc7df9a8190c542445f0c82d835c94b745c8e</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>PILCO25-fix.sh</fixtestCmd>
                <fixcommit>c9230408b92276e1d9054e98d67bb6386e00bb9e</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/nrontsis/PILCO/issues/25</issue_url>
            <commit_url>https://github.com/nrontsis/PILCO/commit/c9230408b92276e1d9054e98d67bb6386e00bb9e</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>probability</name>
        <source>https://github.com/Liang813/probability</source>
        <bug>
            <id>probability1010</id>
            <errormessage>InvalidArgumentError</errormessage>
            <describe>tensorflow_probability.distributions.MixtureSameFamily only works with float32</describe>
            <operateScore>2</operateScore>
            <type>type mismatch</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>4</support_level>
            <similar_bugs>dcgan-tensorflow108, models1707, transformers1152</similar_bugs>
            <buggyVersion>
                <buggytestCmd>probability1010-buggy.sh</buggytestCmd>
                <buggycommit>1c8d5ad855f855625404abe77f1e3b45337ffb46</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>probability1010-fix.sh</fixtestCmd>
                <fixcommit>77229bd921c1508ca11f9068d1133a88449d6760</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/tensorflow/probability/issues/1010</issue_url>
            <commit_url>https://github.com/tensorflow/probability/commit/77229bd921c1508ca11f9068d1133a88449d6760</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>transformers</name>
        <source>https://github.com/Liang813/transformers</source>
        <bug>
            <id>transformers3711</id>
            <errormessage>AssertionError</errormessage>
            <describe>TransfoXLLMHead doesn't shift labels internally when called for loss</describe>
            <operateScore>3</operateScore>
            <type>shape mismatch</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>2</support_level>
            <similar_bugs>rlpyt27</similar_bugs>
            <buggyVersion>
                <buggytestCmd>transformers3711-buggy.sh</buggytestCmd>
                <buggycommit>5ebd8989530e874a9666852ef1bc46e0781dc8e8</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>transformers3711-fix.sh</fixtestCmd>
                <fixcommit>352d5472b0c1dec0f420d606d16747d851b4bda8</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/huggingface/transformers/issues/3711</issue_url>
            <commit_url>https://github.com/huggingface/transformers/commit/352d5472b0c1dec0f420d606d16747d851b4bda8</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>texar-pytorch</name>
        <source>https://github.com/Liang813/texar-pytorch</source>
        <bug>
            <id>texar-pytorch94</id>
            <errormessage>None</errormessage>
            <describe>`np.long` is a platform-dependent type, which is equivalent to `int32` under Windows.</describe>
            <operateScore>1</operateScore>
            <type>type mismatch</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>7</support_level>
            <similar_bugs>segmentation_models.pytorch186, pytorch-ts1, tensorpack408, tensorflowtts70, openkiwi38, tensorflowtts50</similar_bugs>
            <buggyVersion>
                <buggytestCmd>texar-pytorch94-buggy.sh</buggytestCmd>
                <buggycommit>5e899bf359829dec1e08de90bb337d0dd239d3fc</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>texar-pytorch94-fix.sh</fixtestCmd>
                <fixcommit>908daa2650fad706f69d0c5b7bc07d5fad25d922</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/asyml/texar-pytorch/issues/94</issue_url>
            <commit_url>https://github.com/asyml/texar-pytorch/commit/908daa2650fad706f69d0c5b7bc07d5fad25d922</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>pytorch-ts</name>
        <source>https://github.com/Liang813/pytorch-ts</source>
        <bug>
            <id>pytorch-ts1</id>
            <errormessage>RuntimeError</errormessage>
            <describe>Operating system dependent errors</describe>
            <operateScore>1</operateScore>
            <type>type mismatch</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>7</support_level>
            <similar_bugs>segmentation_models.pytorch186, texar-pytorch94, tensorpack408, tensorflowtts70, openkiwi38, tensorflowtts50</similar_bugs>
            <buggyVersion>
                <buggytestCmd>pytorch-ts1-buggy.sh</buggytestCmd>
                <buggycommit>4bc2d247c70c59479d359d13d2db5739227307e8</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>pytorch-ts1-fix.sh</fixtestCmd>
                <fixcommit>87fab61761bb0b11b2c760a9e3d22538268e15a7</fixcommit>
            </fixVersion>
            <character>1</character>
            <issue_url>https://github.com/zalandoresearch/pytorch-ts/issues/1</issue_url>
            <commit_url>https://github.com/zalandoresearch/pytorch-ts/commit/87fab61761bb0b11b2c760a9e3d22538268e15a7</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>rlpyt</name>
        <source>https://github.com/Liang813/rlpyt</source>
        <bug>
            <id>rlpyt27</id>
            <errormessage>RuntimeError</errormessage>
            <describe>MujocoLstmModel does not reshape lstm outputs similarly to AtariLstmModel. </describe>
            <operateScore>2</operateScore>
            <type>shape mismatch</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>5</support_level>
            <similar_bugs>keras11657, tutorials382, edward46, ciphergan4, transformers3711</similar_bugs>
            <buggyVersion>
                <buggytestCmd>rlpyt27-buggy.sh</buggytestCmd>
                <buggycommit>02963ce9b733ae9d7e24b7756daa9ec38d51098f</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>rlpyt27-fix.sh</fixtestCmd>
                <fixcommit>4e54e7af6013647d50a3068894417c4c199ea77b</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/astooke/rlpyt/issues/27</issue_url>
            <commit_url>https://github.com/astooke/rlpyt/commit/4e54e7af6013647d50a3068894417c4c199ea77b</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>FlowNetPytorch</name>
        <source>https://github.com/Liang813/FlowNetPytorch</source>
        <bug>
            <id>flownetpytorch51</id>
            <errormessage>RuntimeError</errormessage>
            <describe>Use torch.device("cuda") if torch.cuda.is_available() else torch.device("cpu") </describe>
            <operateScore>2</operateScore>
            <type>API misuse</type>
<!--            <localScore></localScore>-->
<!--            <fixLength></fixLength>-->
            <support_level>2</support_level>
            <similar_bugs>pytorch-cnn-finetune5</similar_bugs>
            <buggyVersion>
                <buggytestCmd>FlowNetPytorch51-buggy.sh</buggytestCmd>
                <buggycommit>4e44aa63d151fe8833dcb6b60acdfe4850857bdb</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>FlowNetPytorch51-fix.sh</fixtestCmd>
                <fixcommit>678ac413ce55cb3db09d1f24532920582af54f43</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/ClementPinard/FlowNetPytorch/issues/51</issue_url>
            <commit_url>https://github.com/ClementPinard/FlowNetPytorch/commit/678ac413ce55cb3db09d1f24532920582af54f43</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>CipherGAN</name>
        <source>https://github.com/Liang813/CipherGAN</source>
        <bug>
            <id>ciphergan4</id>
            <errormessage></errormessage>
            <describe>Mismatch in shape when calculating GP loss.</describe>
            <type>shape mismatch</type>
            <support_level>5</support_level>
            <similar_bugs>keras11657, tutorials382, edward46, rlpyt27</similar_bugs>
            <buggyVersion>
                <buggytestCmd>ciphergan4-buggy.sh</buggytestCmd>
                <buggycommit>85892479b44eb930c9a770368d983feba3fbc51e</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>ciphergan4-fix.sh</fixtestCmd>
                <fixcommit>e3430b50b61462aaaa5d439551e971fd141c03d6</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/for-ai/CipherGAN/issues/4</issue_url>
            <commit_url>https://github.com/for-ai/CipherGAN/commit/e3430b50b61462aaaa5d439551e971fd141c03d6</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>zhusuan</name>
        <source>https://github.com/Liang813/zhusuan</source>
        <bug>
            <id>zhusuan2</id>
            <errormessage></errormessage>
            <describe>Convolutional VAE batch size not be specified in current version.</describe>
            <type>shape mismatch</type>
            <support_level>2</support_level>
            <similar_bugs>transformers1962</similar_bugs>
            <buggyVersion>
                <buggytestCmd>zhusuan2-buggy.sh</buggytestCmd>
                <buggycommit>b4da9b7c008f2bbd68398686aca1dbce708a1cc9</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>zhusuan2-fix.sh</fixtestCmd>
                <fixcommit>d244b65bd2ed7e2497a7c8d3acb803ecf3a24b96</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/thu-ml/zhusuan/issues/2</issue_url>
            <commit_url>https://github.com/thu-ml/zhusuan/commit/d244b65bd2ed7e2497a7c8d3acb803ecf3a24b96</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>CapsNet-Tensorflow</name>
        <source>https://github.com/Liang813/CapsNet-Tensorflow</source>
        <bug>
            <id>capsnet-tensorflow30</id>
            <errormessage></errormessage>
            <describe>The first layer of the decoder is set incorrectly.</describe>
            <type>shape mismatch</type>
            <support_level>1</support_level>
            <similar_bugs></similar_bugs>
            <buggyVersion>
                <buggytestCmd>capsnet-tensorflow30-buggy.sh</buggytestCmd>
                <buggycommit>ae143697f202f4a9e9f70305a74cae2e06028071</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>capsnet-tensorflow30-fix.sh</fixtestCmd>
                <fixcommit>d8361505f7fbfd0eb21e3cd6d167fcbc717dcf5a</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/naturomics/CapsNet-Tensorflow/issues/30</issue_url>
            <commit_url>https://github.com/naturomics/CapsNet-Tensorflow/commit/d8361505f7fbfd0eb21e3cd6d167fcbc717dcf5a</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>GPflow</name>
        <source>https://github.com/Liang813/GPflow</source>
        <bug>
            <id>gpflow409</id>
            <errormessage>None</errormessage>
            <describe>Adding a jitter to the tf.acos-operation fixes the gradient problem</describe>
            <operateScore>5</operateScore>
            <type>numeric error</type>
            <!--            <localScore></localScore>-->
            <!--            <fixLength></fixLength>-->
            <support_level>2</support_level>
            <similar_bugs>deep-learning-tensorflow</similar_bugs>
            <buggyVersion>
                <buggytestCmd>GPflow409-buggy.sh</buggytestCmd>
                <buggycommit>ca4d3ebe1594d6950a975bcac00784ea2e693be4</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>GPflow409-fix.sh</fixtestCmd>
                <fixcommit>bf8f9a10a466c9d8bb88e85abd2c0ecc4420dc95</fixcommit>
            </fixVersion>
            <character>0</character>
            <issue_url>https://github.com/GPflow/GPflow/issues/409</issue_url>
            <commit_url>https://github.com/GPflow/GPflow/pull/411/commits/bf8f9a10a466c9d8bb88e85abd2c0ecc4420dc95</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>tf_mvg</name>
        <source>https://github.com/Liang813/tf_mvg</source>
        <bug>
            <id>tf_mvg1</id>
            <errormessage></errormessage>
            <describe>Avoid matrix multiplication in KL divergence.</describe>
            <type>Performance</type>
            <support_level>1</support_level>
            <similar_bugs></similar_bugs>
            <buggyVersion>
                <buggytestCmd>tf_mvg1-buggy.sh</buggytestCmd>
                <buggycommit>415225451cabde773c29655943b5ba8c7d591c4e</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>tf_mvg1-fix.sh</fixtestCmd>
                <fixcommit>a7b9b2d50401da7dbb72b8fe0aa76e3018e1e0e0</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/Garoe/tf_mvg/issues/1</issue_url>
            <commit_url>https://github.com/Garoe/tf_mvg/commit/a7b9b2d50401da7dbb72b8fe0aa76e3018e1e0e0</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>tensorflow-adversarial</name>
        <source>https://github.com/Liang813/tensorflow-adversarial</source>
        <bug>
            <id>tensorflow-adversarial6</id>
            <errormessage></errormessage>
            <describe>Dynamic batch volumes should be used instead of static batch volumes, which are not available in most cases.</describe>
            <type>shape mismatch</type>
            <support_level>1</support_level>
            <similar_bugs></similar_bugs>
            <buggyVersion>
                <buggytestCmd>tensorflow-adversarial6-buggy.sh</buggytestCmd>
                <buggycommit>3025b8419a3b74a208498a3ec0f098edaa283342</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>tensorflow-adversarial6-fix.sh</fixtestCmd>
                <fixcommit>68e2628a83e1fbc8934580fb88787643661b4ea8</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/gongzhitaao/tensorflow-adversarial/issues/6</issue_url>
            <commit_url>https://github.com/gongzhitaao/tensorflow-adversarial/commit/68e2628a83e1fbc8934580fb88787643661b4ea8</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>PyTorch-BigGraph</name>
        <source>https://github.com/Liang813/PyTorch-BigGraph</source>
        <bug>
            <id>pytorch-biggraph71</id>
            <errormessage>IndexError</errormessage>
            <describe>IndexError: too many indices for array if one dataset is empty.</describe>
            <type>shape mismatch</type>
            <support_level>1</support_level>
            <similar_bugs></similar_bugs>
            <buggyVersion>
                <buggytestCmd>pytorch-biggraph71-buggy.sh</buggytestCmd>
                <buggycommit>77663a6232d9c5391d4120d07d0ddbe68d2424ce</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>pytorch-biggraph71-fix.sh</fixtestCmd>
                <fixcommit>8a6c5ba6dc58cb65f115c92540be87146b23e74f</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/facebookresearch/PyTorch-BigGraph/issues/71</issue_url>
            <commit_url>https://github.com/facebookresearch/PyTorch-BigGraph/commit/8a6c5ba6dc58cb65f115c92540be87146b23e74f</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>tensorpack</name>
        <source>https://github.com/Liang813/tensorpack</source>
        <bug>
            <id>tensorpack408</id>
            <errormessage></errormessage>
            <describe>CvtColor will fail after ConstantBackgroundFiller due to wrong type.</describe>
            <type>type mismatch</type>
            <support_level>7</support_level>
            <similar_bugs>segmentation_models.pytorch186, texar-pytorch94, pytorch-ts1, tensorflowtts70, openkiwi38, tensorflowtts50</similar_bugs>
            <buggyVersion>
                <buggytestCmd>tensorpack408-buggy.sh</buggytestCmd>
                <buggycommit>2615205ed2ee47fb1f99ab16e2c79cf35ed31d1a</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>tensorpack408-fix.sh</fixtestCmd>
                <fixcommit>f0ee73fce425c347c5e3323892fc62803292cbe2</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/tensorpack/tensorpack/issues/408</issue_url>
            <commit_url>https://github.com/tensorpack/tensorpack/commit/f0ee73fce425c347c5e3323892fc62803292cbe2</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>TensorFlowTTS</name>
        <source>https://github.com/Liang813/TensorFlowTTS</source>
        <bug>
            <id>tensorflowtts70</id>
            <errormessage>ValueError</errormessage>
            <describe>Python inputs incompatible with input_signature.</describe>
            <type>type mismatch</type>
            <support_level>7</support_level>
            <similar_bugs>segmentation_models.pytorch186, texar-pytorch94, pytorch-ts1, tensorpack408, openkiwi38, tensorflowtts50</similar_bugs>
            <buggyVersion>
                <buggytestCmd>tensorflowtts70-buggy.sh</buggytestCmd>
                <buggycommit>9738e8dad2e9dde8afffb888c8cff87f7ab907d5</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>tensorflowtts70-fix.sh</fixtestCmd>
                <fixcommit>7258ba0b313cdf56f7f357fa7a0e289a9cb35de3</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/TensorSpeech/TensorFlowTTS/issues/70</issue_url>
            <commit_url>https://github.com/TensorSpeech/TensorFlowTTS/commit/7258ba0b313cdf56f7f357fa7a0e289a9cb35de3</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>OpenKiwi</name>
        <source>https://github.com/Liang813/OpenKiwi</source>
        <bug>
            <id>openkiwi38</id>
            <errormessage></errormessage>
            <describe>Type mismatch when using openkiwi in PyTorch 1.2.</describe>
            <type>type mismatch</type>
            <support_level>7</support_level>
            <similar_bugs>segmentation_models.pytorch186, texar-pytorch94, pytorch-ts1, tensorpack408, tensorflowtts70, tensorflowtts50</similar_bugs>
            <buggyVersion>
                <buggytestCmd>openkiwi38-buggy.sh</buggytestCmd>
                <buggycommit>40c8ca80b818b49cc7684dac5c6f49908861a5b4</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>openkiwi38-fix.sh</fixtestCmd>
                <fixcommit>6066f05ab963f2b8fe9e221cd3b82e9aea187353</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/Unbabel/OpenKiwi/issues/38</issue_url>
            <commit_url>https://github.com/Unbabel/OpenKiwi/commit/6066f05ab963f2b8fe9e221cd3b82e9aea187353</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>TensorFlowTTS</name>
        <source>https://github.com/Liang813/TensorFlowTTS</source>
        <bug>
            <id>tensorflowtts50</id>
            <errormessage>TypeError</errormessage>
            <describe>Input 'filter' of 'Conv2D' Op has type float32 that does not match type int32 of argument 'input'.</describe>
            <type>type mismatch</type>
            <support_level>7</support_level>
            <similar_bugs>segmentation_models.pytorch186, texar-pytorch94, pytorch-ts1, tensorpack408, openkiwi38, tensorflowtts70</similar_bugs>
            <buggyVersion>
                <buggytestCmd>tensorflowtts50-buggy.sh</buggytestCmd>
                <buggycommit>55e33832a3e1eebbe776be94251d023bf3d2b94f</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>tensorflowtts50-fix.sh</fixtestCmd>
                <fixcommit>1b3f8e58570589b7f348fbcba5fb7695dd6b003b</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/TensorSpeech/TensorFlowTTS/issues/70</issue_url>
            <commit_url>https://github.com/TensorSpeech/TensorFlowTTS/commit/7258ba0b313cdf56f7f357fa7a0e289a9cb35de3</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>tf2rl</name>
        <source>https://github.com/Liang813/tf2rl</source>
        <bug>
            <id>tf2rl94</id>
            <errormessage></errormessage>
            <describe>Inconsistency DDPG and SAC.</describe>
            <type>type mismatch</type>
            <support_level>1</support_level>
            <similar_bugs></similar_bugs>
            <buggyVersion>
                <buggytestCmd>tf2rl94-buggy.sh</buggytestCmd>
                <buggycommit>382895515ccf30e7fc010b8e7343e91725bf91af</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>tf2rl94-fix.sh</fixtestCmd>
                <fixcommit>d156b9b3d8d7af7aa1592a5fecf7e83459f04f83</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/keiohta/tf2rl/issues/94</issue_url>
            <commit_url>https://github.com/keiohta/tf2rl/commit/d156b9b3d8d7af7aa1592a5fecf7e83459f04f83</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>torch-dreams</name>
        <source>https://github.com/Liang813/torch-dreams</source>
        <bug>
            <id>torch-dreams29</id>
            <errormessage></errormessage>
            <describe>"Your session crashed for an unknown reason" on google colab.</describe>
            <type>type mismatch</type>
            <support_level>2</support_level>
            <similar_bugs>tfmf1</similar_bugs>
            <buggyVersion>
                <buggytestCmd>torch-dreams29-buggy.sh</buggytestCmd>
                <buggycommit>b7b4b2a2ea97139607b635fff384393b16c9165a</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>torch-dreams29-fix.sh</fixtestCmd>
                <fixcommit>7be527b31dfb2c43de3df1bbade8d017e9f3f533</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/Mayukhdeb/torch-dreams/issues/29</issue_url>
            <commit_url>https://github.com/Mayukhdeb/torch-dreams/commit/7be527b31dfb2c43de3df1bbade8d017e9f3f533</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>tfmf</name>
        <source>https://github.com/Liang813/tfmf</source>
        <bug>
            <id>tfmf1</id>
            <errormessage></errormessage>
            <describe>Unsupported feed type due to np.int32 dtype.</describe>
            <type>type mismatch</type>
            <support_level>2</support_level>
            <similar_bugs>torch-dreams29</similar_bugs>
            <buggyVersion>
                <buggytestCmd>tfmf1-buggy.sh</buggytestCmd>
                <buggycommit>4058e3698132de5d2708b9918e00d5ceca1e0c2f</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>tfmf1-fix.sh</fixtestCmd>
                <fixcommit>7b3fcff0b6fb3e40a835d599b4e91892d64c5b2f</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/twolodzko/tfmf/issues/1</issue_url>
            <commit_url>https://github.com/twolodzko/tfmf/commit/7b3fcff0b6fb3e40a835d599b4e91892d64c5b2f</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>MnemonicReader</name>
        <source>https://github.com/Liang813/MnemonicReader</source>
        <bug>
            <id>mnemonicreader3</id>
            <errormessage></errormessage>
            <describe>Running train.py encounters type mismatch.</describe>
            <type>type mismatch</type>
            <support_level>2</support_level>
            <similar_bugs>keras1141</similar_bugs>
            <buggyVersion>
                <buggytestCmd>mnemonicreader3-buggy.sh</buggytestCmd>
                <buggycommit>eb51eb679a58677a405953c0c579568377c0b0f8</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>mnemonicreader3-fix.sh</fixtestCmd>
                <fixcommit>660c6f67e1819fd1d930ab972553de489d04c48e</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/HKUST-KnowComp/MnemonicReader/issues/3</issue_url>
            <commit_url>https://github.com/HKUST-KnowComp/MnemonicReader/commit/660c6f67e1819fd1d930ab972553de489d04c48e</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>models</name>
        <source>https://github.com/Liang813/models</source>
        <bug>
            <id>models1040</id>
            <errormessage></errormessage>
            <describe>Wrong use of parameter form.</describe>
            <type>API misuse</type>
            <support_level>4</support_level>
            <similar_bugs>sact1, models857, seq2seq130</similar_bugs>
            <buggyVersion>
                <buggytestCmd>models1040-buggy.sh</buggytestCmd>
                <buggycommit>afdcf7d4270f91f8b2be38c77f6662c270e8b6ee</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>models1040-fix.sh</fixtestCmd>
                <fixcommit>862fbfd4cc2f1cd9f2058225999304de45234c46</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/tensorflow/models/pull/1040</issue_url>
            <commit_url>https://github.com/tensorflow/models/commit/862fbfd4cc2f1cd9f2058225999304de45234c46</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>seq2seq</name>
        <source>https://github.com/Liang813/seq2seq</source>
        <bug>
            <id>seq2seq130</id>
            <errormessage></errormessage>
            <describe>Wrong use of parameter form.</describe>
            <type>API misuse</type>
            <support_level>4</support_level>
            <similar_bugs>sact1, models857, models1040</similar_bugs>
            <buggyVersion>
                <buggytestCmd>seq2seq130-buggy.sh</buggytestCmd>
                <buggycommit>6100ad84ace9bbbc7f5c7bb324382feb15e26f11</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>seq2seq130-fix.sh</fixtestCmd>
                <fixcommit>e0abe4f0ca7b1547a871b023162a460d8d3a6226</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/google/seq2seq/pull/130</issue_url>
            <commit_url>https://github.com/google/seq2seq/commit/e0abe4f0ca7b1547a871b023162a460d8d3a6226</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>models</name>
        <source>https://github.com/Liang813/models</source>
        <bug>
            <id>models1220</id>
            <errormessage></errormessage>
            <describe>Wrong order of function parameters.</describe>
            <type>API misuse</type>
            <support_level>2</support_level>
            <similar_bugs>models1063</similar_bugs>
            <buggyVersion>
                <buggytestCmd>models1220-buggy.sh</buggytestCmd>
                <buggycommit>dcb49d91f9ee867730ade3865d07e4dcee88c0b9</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>models1220-fix.sh</fixtestCmd>
                <fixcommit>e4cbe9ee31995e99dee2d8a4f58e28bb965b633d</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/tensorflow/models/issues/1220</issue_url>
            <commit_url>https://github.com/tensorflow/models/commit/e4cbe9ee31995e99dee2d8a4f58e28bb965b633d</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>tensorpack</name>
        <source>https://github.com/Liang813/tensorpack</source>
        <bug>
            <id>tensorpack1008</id>
            <errormessage>FailedPreconditionError</errormessage>
            <describe>Uninitialized when using hashtable.</describe>
            <type>API misuse</type>
            <support_level>3</support_level>
            <similar_bugs>gpflow99, tensorflow3168</similar_bugs>
            <buggyVersion>
                <buggytestCmd>tensorpack1008-buggy.sh</buggytestCmd>
                <buggycommit>e68af9aaaf115d1dc669e3390175d44d21759338</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>tensorpack1008-fix.sh</fixtestCmd>
                <fixcommit>168f729220d5be09d12a5941d1089c10898c5d87</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/tensorpack/tensorpack/issues/1008</issue_url>
            <commit_url>https://github.com/tensorpack/tensorpack/commit/168f729220d5be09d12a5941d1089c10898c5d87</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>tf-lstm-char-cnn</name>
        <source>https://github.com/Liang813/tf-lstm-char-cnn</source>
        <bug>
            <id>tf-lstm-char-cnn6</id>
            <errormessage>FailedPreconditionError</errormessage>
            <describe>Due to the version update, the initialization function has been change.</describe>
            <type>API misuse</type>
            <support_level>3</support_level>
            <similar_bugs>deep-rl-tensorflow21, bit-rnn2</similar_bugs>
            <buggyVersion>
                <buggytestCmd>tf-lstm-char-cnn6-buggy.sh</buggytestCmd>
                <buggycommit>7e899e6992cbf9a96e6d791e5d364eaaeec339a2</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>tf-lstm-char-cnn6-fix.sh</fixtestCmd>
                <fixcommit>89bc07e2d8a7c5a17ed8de2fcab45f043877c914</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/mkroutikov/tf-lstm-char-cnn/issues/6</issue_url>
            <commit_url>https://github.com/mkroutikov/tf-lstm-char-cnn/commit/89bc07e2d8a7c5a17ed8de2fcab45f043877c914</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>deep-rl-tensorflow</name>
        <source>https://github.com/Liang813/deep-rl-tensorflow</source>
        <bug>
            <id>deep-rl-tensorflow21</id>
            <errormessage></errormessage>
            <describe>Initialize_all_variables deprecation warning.</describe>
            <type>API misuse</type>
            <support_level>3</support_level>
            <similar_bugs>tf-lstm-char-cnn6, bit-rnn2</similar_bugs>
            <buggyVersion>
                <buggytestCmd>deep-rl-tensorflow21-buggy.sh</buggytestCmd>
                <buggycommit>169af236e8800384d75589fbe78ef262e21b1b3f</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>deep-rl-tensorflow21-fix.sh</fixtestCmd>
                <fixcommit>7bbb5a359276b37c9fdb58c4f7f2cf01bc8a4009</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/carpedm20/deep-rl-tensorflow/issues/21</issue_url>
            <commit_url>https://github.com/carpedm20/deep-rl-tensorflow/commit/7bbb5a359276b37c9fdb58c4f7f2cf01bc8a4009</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>bit-rnn</name>
        <source>https://github.com/Liang813/bit-rnn</source>
        <bug>
            <id>bit-rnn2</id>
            <errormessage></errormessage>
            <describe>Due to the version update, the initialization function has been change.</describe>
            <type>API misuse</type>
            <support_level>3</support_level>
            <similar_bugs>tf-lstm-char-cnn6, deep-rl-tensorflow21</similar_bugs>
            <buggyVersion>
                <buggytestCmd>bit-rnn2-buggy.sh</buggytestCmd>
                <buggycommit>99bf7cd4fae00dfdc2befef9f7b245e4e712207c</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>bit-rnn2-fix.sh</fixtestCmd>
                <fixcommit>65f5a6f9c41be7edee0f77dd391bd394027aebf3</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/qinyao-he/bit-rnn/issues/2</issue_url>
            <commit_url>https://github.com/qinyao-he/bit-rnn/commit/65f5a6f9c41be7edee0f77dd391bd394027aebf3</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>pytorch-cnn-finetune</name>
        <source>https://github.com/Liang813/pytorch-cnn-finetune</source>
        <bug>
            <id>pytorch-cnn-finetune5</id>
            <errormessage></errormessage>
            <describe>Consider the case of a machine without a GPU.</describe>
            <type>API misuse</type>
            <support_level>2</support_level>
            <similar_bugs>flownetpytorch51</similar_bugs>
            <buggyVersion>
                <buggytestCmd>pytorch-cnn-finetune5-buggy.sh</buggytestCmd>
                <buggycommit>4d22c669817ec6c83271d8c480c0fba0fcf75fdb</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>pytorch-cnn-finetune5-fix.sh</fixtestCmd>
                <fixcommit>73a0b578a80ba48c0a195e4cb946a1fb98a34e2a</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/creafz/pytorch-cnn-finetune/issues/5</issue_url>
            <commit_url>https://github.com/creafz/pytorch-cnn-finetune/commit/73a0b578a80ba48c0a195e4cb946a1fb98a34e2a</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>bindsnet</name>
        <source>https://github.com/Liang813/bindsnet</source>
        <bug>
            <id>bindsnet362</id>
            <errormessage></errormessage>
            <describe>GPU device miss-match in encoder fix.</describe>
            <type>API misuse</type>
            <support_level>2</support_level>
            <similar_bugs>dalle-pytorch161</similar_bugs>
            <buggyVersion>
                <buggytestCmd>bindsnet362-buggy.sh</buggytestCmd>
                <buggycommit>2b17f617c4c1e586a5896f3ac57b9398f3f1c555</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>bindsnet362-fix.sh</fixtestCmd>
                <fixcommit>a696fd4c031e25db6edbb19f378d3c26587b077c</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/BindsNET/bindsnet/issues/362</issue_url>
            <commit_url>https://github.com/BindsNET/bindsnet/commit/a696fd4c031e25db6edbb19f378d3c26587b077c</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>DALLE-pytorch</name>
        <source>https://github.com/Liang813/DALLE-pytorch</source>
        <bug>
            <id>dalle-pytorch161</id>
            <errormessage></errormessage>
            <describe>Set CUDA device earlier to avoid errors.</describe>
            <type>API misuse</type>
            <support_level>2</support_level>
            <similar_bugs>bindsnet362</similar_bugs>
            <buggyVersion>
                <buggytestCmd>dalle-pytorch161-buggy.sh</buggytestCmd>
                <buggycommit>c9d371281e7d6f7e9fdde7cf0248a64e10dc74c0</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>dalle-pytorch161-fix.sh</fixtestCmd>
                <fixcommit>fdb31e18c931cd137267f47f38b63b70f6d56b91</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/lucidrains/DALLE-pytorch/issues/161</issue_url>
            <commit_url>https://github.com/lucidrains/DALLE-pytorch/commit/fdb31e18c931cd137267f47f38b63b70f6d56b91</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>char-rnn-tensorflow</name>
        <source>https://github.com/Liang813/char-rnn-tensorflow</source>
        <bug>
            <id>char-rnn-tensorflow47</id>
            <errormessage></errormessage>
            <describe>On GPU machine, there is no such thing as eval() for some reason. sess.run(x) is the way to get the values out of a tensor.</describe>
            <type>API misuse</type>
            <support_level>2</support_level>
            <similar_bugs>word-rnn-tensorflow9</similar_bugs>
            <buggyVersion>
                <buggytestCmd>char-rnn-tensorflow47-buggy.sh</buggytestCmd>
                <buggycommit>c737d4c3867e582a2734d8f5edbcb0948d50438e</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>char-rnn-tensorflow47-fix.sh</fixtestCmd>
                <fixcommit>b365fac41e477e1d8b81e3e49a710d962fc4f6da</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/sherjilozair/char-rnn-tensorflow/issues/47</issue_url>
            <commit_url>https://github.com/sherjilozair/char-rnn-tensorflow/pull/49/commits/b365fac41e477e1d8b81e3e49a710d962fc4f6da</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>word-rnn-tensorflow</name>
        <source>https://github.com/Liang813/word-rnn-tensorflow</source>
        <bug>
            <id>word-rnn-tensorflow9</id>
            <errormessage></errormessage>
            <describe>Depending on how TF was installed (GPU for instance), eval() is not available, while sess.run() always is.</describe>
            <type>API misuse</type>
            <support_level>2</support_level>
            <similar_bugs>char-rnn-tensorflow47</similar_bugs>
            <buggyVersion>
                <buggytestCmd>word-rnn-tensorflow9-buggy.sh</buggytestCmd>
                <buggycommit>4b48ed745a41f650738ff5c55aae75b3244e3bf2</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>word-rnn-tensorflow9-fix.sh</fixtestCmd>
                <fixcommit>786b41b7bb799d9004e11adfedc1881f7c852a7b</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/hunkim/word-rnn-tensorflow/issues/9</issue_url>
            <commit_url>https://github.com/hunkim/word-rnn-tensorflow/pull/15/commits/786b41b7bb799d9004e11adfedc1881f7c852a7b</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>GaitGraph</name>
        <source>https://github.com/Liang813/GaitGraph</source>
        <bug>
            <id>gaitgraph3</id>
            <errormessage></errormessage>
            <describe>Torch.nn.DataParallel using multiple GPUs.</describe>
            <type>Performance</type>
            <support_level>1</support_level>
            <similar_bugs></similar_bugs>
            <buggyVersion>
                <buggytestCmd>gaitgraph3-buggy.sh</buggytestCmd>
                <buggycommit>e0287414800e84e7364452a62dcc8e44d2295012</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>gaitgraph3-fix.sh</fixtestCmd>
                <fixcommit>7e655251657bf4ca189e712cf01df39a390eac69</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/tteepe/GaitGraph/issues/3</issue_url>
            <commit_url>https://github.com/tteepe/GaitGraph/commit/7e655251657bf4ca189e712cf01df39a390eac69</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>models</name>
        <source>https://github.com/Liang813/models</source>
        <bug>
            <id>models449</id>
            <errormessage></errormessage>
            <describe>Mismatch in the number of function parameters.</describe>
            <type>API misuse</type>
            <support_level>1</support_level>
            <similar_bugs></similar_bugs>
            <buggyVersion>
                <buggytestCmd>models449-buggy.sh</buggytestCmd>
                <buggycommit>c5bb05430dcc6a2c377ffed35b00a18b402fcbc3</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>models449-fix.sh</fixtestCmd>
                <fixcommit>253ca4ab8101dc2c2404530680b4a12e7518572d</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/tensorflow/models/pull/449</issue_url>
            <commit_url>https://github.com/tensorflow/models/commit/253ca4ab8101dc2c2404530680b4a12e7518572d</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>PyTorch-Mini-Tutorials</name>
        <source>https://github.com/Liang813/PyTorch-Mini-Tutorials</source>
        <bug>
            <id>pytorch-mini-tutorials1</id>
            <errormessage></errormessage>
            <describe>Modified the architecture of the model by removing the softmax layer.</describe>
            <type>architecture design convention</type>
            <support_level>2</support_level>
            <similar_bugs>generative-models20</similar_bugs>
            <buggyVersion>
                <buggytestCmd>pytorch-mini-tutorials1-buggy.sh</buggytestCmd>
                <buggycommit>4ee3ccb0d544488a26272206f23a453e55f83779</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>pytorch-mini-tutorials1-fix.sh</fixtestCmd>
                <fixcommit>f32192e649d71d49f2ee5169cede28260147026f</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/vinhkhuc/PyTorch-Mini-Tutorials/issues/1</issue_url>
            <commit_url>https://github.com/vinhkhuc/PyTorch-Mini-Tutorials/commit/f32192e649d71d49f2ee5169cede28260147026f</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

    <sir>
        <name>generative-models</name>
        <source>https://github.com/Liang813/generative-models</source>
        <bug>
            <id>generative-models20</id>
            <errormessage></errormessage>
            <describe>Should not apply softmax into nn.cross_entropy.</describe>
            <type>architecture design convention</type>
            <support_level>2</support_level>
            <similar_bugs>pytorch-mini-tutorials1</similar_bugs>
            <buggyVersion>
                <buggytestCmd>generative-models20-buggy.sh</buggytestCmd>
                <buggycommit>eacf31ab4992aa01b45e59af81104f7bda63e264</buggycommit>
            </buggyVersion>
            <fixVersion>
                <fixtestCmd>generative-models20-fix.sh</fixtestCmd>
                <fixcommit>2fe7d030ddd22d4780647ea151f26b0e4621ec78</fixcommit>
            </fixVersion>
            <character></character>
            <issue_url>https://github.com/wiseodd/generative-models/issues/20</issue_url>
            <commit_url>https://github.com/wiseodd/generative-models/commit/2fe7d030ddd22d4780647ea151f26b0e4621ec78</commit_url>
            <detection_tools></detection_tools>
        </bug>
    </sir>

</root>